package sistemavotacion;

import javax.swing.table.DefaultTableModel;
import clases.*;
import TDAA.*;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

public class ListaElecciones extends javax.swing.JFrame {
    private Sistema sistema;
    private DefaultTableModel modeloTabla;

    public ListaElecciones(Sistema sistema) {
        initComponents();
        this.sistema = sistema;

        inicializarTabla();
        cargarDatosTabla();
    }

    private void inicializarTabla() {
        modeloTabla = new DefaultTableModel(
            new Object[]{
                "Nombre", "Fecha", "Tipo", "Candidato", "Mesa Electoral"
            }, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        tablaelecciones.setModel(modeloTabla);
    }

    private void cargarDatosTabla() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
        Lista<Eleccion> elecciones = sistema.obtenereleccion();

        if (elecciones == null || elecciones.longitud() == 0) {
            JOptionPane.showMessageDialog(this, "No hay elecciones registradas.", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        for (int i = 1; i <= elecciones.longitud(); i++) {
            Eleccion eleccion = elecciones.iesimo(i);

            String candidatoInfo = eleccion.getCandidato() != null
                    ? eleccion.getCandidato().getNombre() + " (" + eleccion.getCandidato().getPartidoPolitico() + ")"
                    : "Sin candidato";

            String mesaInfo = eleccion.getMesaElectoral() != null
                    ? eleccion.getMesaElectoral().getNumeroMesa() + " (" + eleccion.getMesaElectoral().getUbicacion() + ")"
                    : "Sin mesa";

            modeloTabla.addRow(new Object[]{
                eleccion.getNombre(),
                eleccion.getFecha().format(formatter),
                eleccion.getTipo(),
                candidatoInfo,
                mesaInfo
            });
        }
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaelecciones = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablaelecciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(tablaelecciones);

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnEliminar)
                        .addGap(81, 81, 81)
                        .addComponent(btnModificar)
                        .addGap(64, 64, 64)
                        .addComponent(jButton1)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnModificar)
                    .addComponent(jButton1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
  int filaSeleccionada = tablaelecciones.getSelectedRow();

    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una elección para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

  
    int confirmacion = JOptionPane.showConfirmDialog(this, 
        "¿Está seguro de que desea eliminar esta elección?", 
        "Confirmar eliminación", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.WARNING_MESSAGE);

    if (confirmacion != JOptionPane.YES_OPTION) {
        return;
    }

    
    String nombreEleccion = modeloTabla.getValueAt(filaSeleccionada, 0).toString();

   
    boolean eliminada = sistema.eliminarEleccionPorNombre(nombreEleccion);

    if (eliminada) {
       
        modeloTabla.removeRow(filaSeleccionada);
        JOptionPane.showMessageDialog(this, "Elección eliminada exitosamente.", "Información", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo eliminar la elección. Verifique los datos.", "Error", JOptionPane.ERROR_MESSAGE);
    } 
                      
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
   

        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaelecciones;
    // End of variables declaration//GEN-END:variables

}